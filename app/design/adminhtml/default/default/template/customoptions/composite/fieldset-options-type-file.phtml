<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

$_option = $this->getOption();
$_fileInfo = $this->getFileInfo();
$_fileExists = $_fileInfo->hasData() ? true : false;
$_fileName = 'options_' . $_option->getId() . '_file';
$_fieldNameAction = $_fileName . '_action';
$_fieldValueAction = $_fileExists ? 'save_old' : 'save_new';
$_fileNamed = $_fileName . '_name';
$_rand = rand(); 

$disabled = '';
if (Mage::helper('customoptions')->isDependentEnabled() && $_option->getIsDependent()) {
    $disabled = 'disabled="disabled"';
    echo '<script type="text/javascript">inGroupIdData['.$_option->getInGroupId().'] = {"disabled":true, "option_'.$_option->getId().'_file":1};</script>';    
}

?>



<script type="text/javascript">
//<![CDATA[
    opFile<?php echo $_rand; ?> = {
        initializeFile: function(inputBox) {
            this.inputFile = inputBox.select('input[name="<?php echo $_fileName; ?>"]')[0];
            this.inputFileAction = inputBox.select('input[name="<?php echo $_fieldNameAction; ?>"]')[0];
            this.fileNameBox = inputBox.up('dd').select('.<?php echo $_fileNamed ?>')[0];
        },

        toggleFileChange: function(inputBox) {
            this.initializeFile(inputBox);
            inputBox.toggle();
            this.fileChangeFlag = this.fileChangeFlag ? false : true;
            if (!this.fileDeleteFlag) {
                if (this.fileChangeFlag) {
                     this.inputFileAction.value = 'save_new';
                     this.inputFile.disabled = false;
                 } else {
                     this.inputFileAction.value = 'save_old';
                     this.inputFile.disabled = true;
                 }
            }
        },

        toggleFileDelete: function(fileDeleteFlag, inputBox) {
            this.initializeFile(inputBox);
            this.fileDeleteFlag = fileDeleteFlag.checked ? true : false;
            if (this.fileDeleteFlag) {
                this.inputFileAction.value = '';
                this.inputFile.disabled = true;
                this.fileNameBox.setStyle({'text-decoration': 'line-through'});
            } else {
                this.inputFileAction.value = this.fileChangeFlag ? 'save_new' : 'save_old';
                this.inputFile.disabled = (this.fileChangeFlag == 'save_old');
                this.fileNameBox.setStyle({'text-decoration': 'none'});
            }
        }
    };
//]]>
</script>
<div <?php if (Mage::helper('customoptions')->hideDependentOption() && $_option->getIsDependent()) { ?>style="display: none;"<?php } ?>>
<dt><label <?php if ($_option->getIsRequire()) echo ' class="required"' ?>><?php if ($_option->getIsRequire()) echo '<em>*</em>' ?><?php echo  $this->htmlEscape($_option->getTitle()) ?></label>
    <?php echo $this->getFormatedPrice() ?>
    <?php if ($_option->getDescription()): ?><p class="note"><?php echo $_option->getDescription() ?></p><?php endif; ?></dt>
</dt>
<dd<?php if ($_option->decoratedIsLast){?> class="last"<?php }?>>
    <?php if ($_fileExists): ?>
        <span class="<?php echo $_fileNamed ?>"><?php echo $_fileInfo->getTitle(); ?></span>
        <a href="javascript:void(0)" class="label" onclick="opFile<?php echo $_rand; ?>.toggleFileChange($(this).next('.input-box'))">
            <?php echo Mage::helper('customoptions')->__('Change') ?>
        </a>&nbsp;
        <?php if (!$_option->getIsRequire()): ?>
            <input type="checkbox" onclick="opFile<?php echo $_rand; ?>.toggleFileDelete($(this), $(this).next('.input-box'))" price="<?php echo $this->getCurrencyPrice($_option->getPrice(true)) ?>"/>
            <span class="label"><?php echo Mage::helper('catalog')->__('Delete') ?></span>
        <?php endif; ?>
    <?php endif; ?>
    <div class="input-box" <?php echo $_fileExists ? 'style="display:none"' : '' ?>>
        <input type="file" id="option_<?php echo $_option->getId() ?>_file" name="<?php echo $_fileName; ?>" class="product-custom-option<?php echo $_option->getIsRequire() ?($_option->getIsDependent()?' required-dependent':' required-entry') : '' ?>" price="<?php echo $this->getCurrencyPrice($_option->getPrice(true)) ?>" <?php echo $_fileExists ? 'disabled="disabled"' : '' ?>/>
        <input type="hidden" name="<?php echo $_fieldNameAction; ?>" value="<?php echo $_fieldValueAction; ?>" />
        <?php if ($_option->getFileExtension()): ?>
        <p class="no-margin"><?php echo Mage::helper('catalog')->__('Allowed file extensions to upload')?>: <strong><?php echo $_option->getFileExtension() ?></strong></p>
        <?php endif; ?>
        <?php if ($_option->getImageSizeX() > 0): ?>
        <p class="no-margin"><?php echo Mage::helper('catalog')->__('Maximum image width')?>: <strong><?php echo $_option->getImageSizeX() ?> <?php echo Mage::helper('catalog')->__('px.')?></strong></p>
        <?php endif; ?>
        <?php if ($_option->getImageSizeY() > 0): ?>
        <p class="no-margin"><?php echo Mage::helper('catalog')->__('Maximum image height')?>: <strong><?php echo $_option->getImageSizeY() ?> <?php echo Mage::helper('catalog')->__('px.')?></strong></p>
        <?php endif; ?>
    </div>
</dd>
</div>